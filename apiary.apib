FORMAT: 1A

# Acano Server API

Demo of API Blueprint with the Acano Server API.





# Group coSpaces

Resources related to coSpaces in the API.

## coSpaces Collection [/coSpaces]

### List All coSpaces [GET]

Return a list of coSpaces

+ Parameters
    + filter (string, optional)
    + offset (number, optional)
    + limit (number, optional)
    + tenantFilter (ID, optional)
    + callLegProfileFilter (ID, optional)

+ Response 200 (text/xml)

        <coSpaces total="1">
            <coSpace id=>
                <name></name>
                <uri></uri>
                <secondaryUri></secondaryUri>
                <callId></callId>
                <tenant></tenant>
                <autoGenerated></autoGenerated>
            </coSpace>
        </coSpaces>


### Create a new coSpace [POST]

Create a coSpace

+ Parameters
    + name (string, optional)
    + uri (string, optional)
    + secondaryUri (string, optional)
    + callId (ID, optional)
    + cdrTag (string, optional)
    + passcode (string, optional)
    + defaultLayout (enum[string], optional)
        + Members
            + allEqual
            + speakerOnly
            + telepresence
            + stacked
            + allEqualQuarters
            + allEqualNinths
            + allEqualSixteenths
            + allEqualTwentyFifths
            + onePlusFive
            + onePlusSeven
            + onePlusNine
    + tenant (ID, optional)
    + callLegProfile (ID, optional)
    + callProfile (ID, optional)
    + callBrandingProfile (ID, optional)
    + requireCallId (boolean, optional)
    + secret (string, optional)
    + regenerateSecret (boolean, optional)

+ Request without body

+ Response 200
    + Headers

            Location: ID

+ Request with body (application/x-www-form-urlencoded)
    + Body

            name=MyNewCoSpace

+ Response 200


### Modify a coSpace [PUT /coSpaces/{id}]

Modify a coSpace

+ Parameters
    + id: `a134ae38-7559-4b67-bb01-237d8db33849` (string, required)
    + name (string, optional)
    + uri (string, optional)
    + secondaryUri (string, optional)
    + callId (ID, optional)
    + cdrTag (string, optional)
    + passcode (string, optional)
    + defaultLayout (enum[string], optional)
        + Members
            + allEqual
            + speakerOnly
            + telepresence
            + stacked
            + allEqualQuarters
            + allEqualNinths
            + allEqualSixteenths
            + allEqualTwentyFifths
            + onePlusFive
            + onePlusSeven
            + onePlusNine
    + tenant (ID, optional)
    + callLegProfile (ID, optional)
    + callProfile (ID, optional)
    + callBrandingProfile (ID, optional)
    + requireCallId (boolean, optional)
    + secret (string, optional)
    + regenerateSecret (boolean, optional)

+ Request with body (application/x-www-form-urlencoded)
    + Body

            name=MyNewCoSpace

+ Response 200


### Retrieving the members of a coSpace [GET /coSpaces/{id}/coSpaceUsers]

Return a list of coSpace members

+ Parameters
    + id: `a134ae38-7559-4b67-bb01-237d8db33849` (string, required)
    + filter (string, optional)
    + offset (number, optional)
    + limit (number, optional)
    + callLegProfileFilter (ID, optional)

+ Response 200 (text/xml)

        <coSpaceUsers total="1">
            <coSpaceUser id=>
                <userJid></userJid>
                <userId></userId>
                <autoGenerated></autoGenerated>
            </coSpaceUser>
        </coSpaceUsers>


### Adding a member to a coSpace [POST /coSpaces/{id}/coSpaceUsers]

Create a coSpace member

+ Parameters
    + id: `a134ae38-7559-4b67-bb01-237d8db33849` (string, required)
    + userJID (ID)
    + callLegProfile (ID, optional)
    + canDestroy (boolean, optional)
    + canAddRemoveMember (boolean, optional)
    + canChangeName (boolean, optional)
    + canChangeUri (boolean, optional)
    + canChangeCallId (boolean, optional)
    + canChangePasscode (boolean, optional)
    + canPostMessage (boolean, optional)
    + canRemoveSelf (boolean, optional)
    + canDeleteAllMessages (boolean, optional)

+ Response 200
    + Headers

            Location: ID


### Modify a coSpace member [PUT /coSpaces/{id}/coSpaceUsers/{id}]

Modify a coSpace member

+ Parameters
    + id: `a134ae38-7559-4b67-bb01-237d8db33849` (string, required)
    + callLegProfile (ID, optional)
    + canDestroy (boolean, optional)
    + canAddRemoveMember (boolean, optional)
    + canChangeName (boolean, optional)
    + canChangeUri (boolean, optional)
    + canChangeCallId (boolean, optional)
    + canChangePasscode (boolean, optional)
    + canPostMessage (boolean, optional)
    + canRemoveSelf (boolean, optional)
    + canDeleteAllMessages (boolean, optional)

+ Response 200

### Retrieving a member of a coSpace [GET /coSpaces/{id}/coSpaceUsers/{id}]
+ Parameters
    + id: `a134ae38-7559-4b67-bb01-237d8db33849` (string, required)

+ Response 200 (text/xml)

        <coSpaceUser id=>
            <userJid></userJid>
            <autoGenerated></autoGenerated>
            <callLegProfile></callLegProfile>
            <canDestroy></canDestroy>
            <canAddRemoveMember></canAddRemoveMember>
            <canChangeName></canChangeName>
            <canChangeUri></canChangeUri>
            <canChangeCallId></canChangeCallId>
            <canChangePasscode></canChangePasscode>
            <canPostMessage></canPostMessage>
            <canRemoveSelf></canRemoveSelf>
            <canDeleteAllMessages></canDeleteAllMessages>
        </coSpaceUser>


### Posting to the message board of a coSpace [POST /coSpaces/{id}/messages]
+ Parameters
    + id: `a134ae38-7559-4b67-bb01-237d8db33849` (string, required)
    + message (string)
    + from (string, optional)

+ Response 200
    + Headers

            Location: ID


### Deleting message from a coSpace message board 6.5.2 [DELETE /coSpaces/{id}/messages]
+ Parameters
    + id: `a134ae38-7559-4b67-bb01-237d8db33849` (string, required)
    + minAge (number, optional)
    + maxAge (number, optional)

+ Response 200


### Retrieving the coSpace accessMethods [GET /coSpaces/{id}/accessMethods]
+ Parameters
    + id: `a134ae38-7559-4b67-bb01-237d8db33849` (string, required)
    + filter (string, optional)
    + offset (number, optional)
    + limit (number, optional)
    + callLegProfileFilter (ID, optional)

+ Response 200 (text/xml)

        <accessMethods total="1">
            <accessMethod id=>
                <uri></uri>
                <callId></callId>
                <passcode></passcode>
                <callLegProfile></callLegProfile>
            </accessMethod>
        </accessMethods>


### Creating a coSpace access method [POST /coSpaces/{id}/accessMethods]
+ Parameters
    + id: `a134ae38-7559-4b67-bb01-237d8db33849` (string, required)
    + uri (string, optional)
    + callId (ID, optional)
    + passcode (string, optional)
    + callLegProfile (ID, optional)
    + secret (string, optional)
    + regenerateSecret (boolean, optional)
    + scope (enum[string], optional)
        + Members
            + public
            + private

+ Response 200
    + Headers

            Location: ID


### Modify a coSpace access method [PUT /coSpaces/{id}/accessMethods/{id}]
+ Parameters
    + id: `a134ae38-7559-4b67-bb01-237d8db33849` (string, required)
    + uri (string, optional)
    + callId (ID, optional)
    + passcode (string, optional)
    + callLegProfile (ID, optional)
    + secret (string, optional)
    + regenerateSecret (boolean, optional)
    + scope (enum[string], optional)
        + Members
            + public
            + private

+ Response 200


### Retrieve an individual coSpace access method [GET /coSpaces/{id}/accessMethods/{id}]
+ Parameters
    + id: `a134ae38-7559-4b67-bb01-237d8db33849` (string, required)

+ Response 200 (text/xml)

        <accessMethod id=>
            <uri></uri>
            <callId></callId>
            <passcode></passcode>
            <callLegProfile></callLegProfile>
        </accessMethod>


### Generate diagnostics for a coSpace [POST /coSpaces/{id}/diagnostics]
+ Parameters
    + id: `a134ae38-7559-4b67-bb01-237d8db33849` (string, required)

+ Response 200




# Group Dial Plan

Something fancy goes here

## Outgoing Dial Plan Collection [/outboundDialPlanRules]

### List outbound dial plan rules [GET]
+ Parameters
    + filter (string, optional)
    + offset (number, optional)
    + limit (number, optional)
    + tenantFilter (ID, optional)

+ Response 200 (text/xml)

        <outboundDialPlanRules total="1">
            <outboundDialPlanRule id=>
                <domain></domain>
                <priority></priority>
                <tenant></tenant>
            </outboundDialPlanRule>
        </outboundDialPlanRules>


### Creating an outbound dial plan rule [POST /outboundDialPlanRules]
+ Parameters
    + domain (string)
    + localContactDomain (string, optional)
    + localFromDomain (string, optional)
    + sipProxy (string, optional)
    + trunkType (enum[string], optional)
        + Default: `sip`
        + Members
            + sip
            + lync
            + avaya
    + priority (number, optional)
    + failureAction (enum[string], optional)
        + Default: `stop`
        + Members
            + stop
            + continue
    + sipControlEncryption (enum[string], optional)
        + Default: `auto`
        + Members
            + auto
            + encrypted
            + unencrypted
    + scope (enum[string], optional)
        + Members
            + global
            + callBridge
    + callBridge (ID, optional)
    + tenant (ID, optional)
    + callRouting (enum[string], optional)
        + Members
            + default
            + traversal

+ Response 200
    + Headers

            Location: ID

### Modify an outbound dial plan rule [PUT /outboundDialPlanRules/{id}]
+ Parameters
    + id: `a134ae38-7559-4b67-bb01-237d8db33849` (string, required)
    + domain (string)
    + localContactDomain (string, optional)
    + localFromDomain (string, optional)
    + sipProxy (string, optional)
    + trunkType (enum[string], optional)
        + Default: `sip`
        + Members
            + sip
            + lync
            + avaya
    + priority (number, optional)
    + failureAction (enum[string], optional)
        + Default: `stop`
        + Members
            + stop
            + continue
    + sipControlEncryption (enum[string], optional)
        + Default: `auto`
        + Members
            + auto
            + encrypted
            + unencrypted
    + scope (enum[string], optional)
        + Members
            + global
            + callBridge
    + callBridge (ID, optional)
    + tenant (ID, optional)
    + callRouting (enum[string], optional)
        + Members
            + default
            + traversal

+ Response 200


### Retrieve an outbound dial plan rule [GET /outboundDialPlanRules/{id}]
+ Parameters
    + id: `a134ae38-7559-4b67-bb01-237d8db33849` (string, required)

+ Response 200 (text/xml)

        <outboundDialPlanRule id=>
            <domain></domain>
            <localContactDomain></localContactDomain>
            <localFromDomain></localFromDomain>
            <sipProxy></sipProxy>
            <trunkType></trunkType>
            <priority></priority>
            <failureAction></failureAction>
            <sipControlEncryption></sipControlEncryption>
            <scope></scope>
            <callBridge></callBridge>
            <tenant></tenant>
            <callRouting></callRouting>
        </outboundDialPlanRule>


## Incoming Call Matching Dial Plan Collection [/inboundDialPlanRules]

### List incoming dial plan rules [GET]
+ Parameters
    + filter (string, optional)
    + offset (number, optional)
    + limit (number, optional)
    + tenantFilter (ID, optional)

+ Response 200 (text/xml)

        <inboundDialPlanRules total="1">
            <inboundDialPlanRule id=>
                <domain></domain>
                <tenant></tenant>
            </inboundDialPlanRule>
        </inboundDialPlanRules>


### Creating an inbound dial plan rule [POST /inboundDialPlanRules]
+ Parameters
    + domain (string)
    + priority (number, optional)
    + resolveToUsers (boolean, optional)
        + Default: `true`
    + resolveTocoSpaces (boolean, optional)
        + Default: `true`
    + resolveToIvrs (boolean, optional)
        + Default: `true`
    + resolveToLyncConferences (boolean, optional)
        + Default: `false`
    + tenant (ID, optional)


+ Response 200
    + Headers

            Location: ID


### Modify an inbound dial plan rule [PUT /inboundDialPlanRules/{id}]
+ Parameters
    + id: `a134ae38-7559-4b67-bb01-237d8db33849` (string, required)
    + domain (string)
    + priority (number, optional)
    + resolveToUsers (boolean, optional)
        + Default: `true`
    + resolveTocoSpaces (boolean, optional)
        + Default: `true`
    + resolveToIvrs (boolean, optional)
        + Default: `true`
    + resolveToLyncConferences (boolean, optional)
        + Default: `false`
    + tenant (ID, optional)


+ Response 200


### Retrieve an inbound dial plan rule [GET /inboundDialPlanRules/{id}]
+ Parameters
    + id: `a134ae38-7559-4b67-bb01-237d8db33849` (string, required)

+ Response 200 (text/xml)

        <inboundDialPlanRule id=>
            <domain></domain>
            <priority></priority>
            <resolveToUsers></resolveToUsers>
            <resolveTocoSpaces></resolveTocoSpaces>
            <resolveToIvrs></resolveToIvrs>
            <resolveToLyncConferences></resolveToLyncConferences>
            <tenant></tenant>
        </inboundDialPlanRule>


### Do something awesome [POST]

This is some text to describe what this request does.

+ Attributes (object)
    + message
    + author
    + id: 1 (number)
    + isPublished: true (boolean) - Is the message visible
    + isRatedR (boolean, required)
    + enum (enum, required)
        + c1
        + c2

+ Request (application/json)
+ Request (application/x-www-form-urlencoded)
    + Body

            message=foo
            author=anakin

+ Response 200
    + Headers

                Location: ID
